// <auto-generated/>
#pragma warning disable
#nullable enable
namespace Veriado.WinUI.ViewModels.Shell
{
    /// <inheritdoc/>
    partial class MainShellViewModel
    {
        /// <inheritdoc cref="isNavOpen"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public bool IsNavOpen
        {
            get => isNavOpen;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<bool>.Default.Equals(isNavOpen, value))
                {
                    OnIsNavOpenChanging(value);
                    OnIsNavOpenChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.IsNavOpen);
                    isNavOpen = value;
                    OnIsNavOpenChanged(value);
                    OnIsNavOpenChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.IsNavOpen);
                }
            }
        }

        /// <inheritdoc cref="currentPage"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::Veriado.WinUI.Navigation.PageId CurrentPage
        {
            get => currentPage;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::Veriado.WinUI.Navigation.PageId>.Default.Equals(currentPage, value))
                {
                    OnCurrentPageChanging(value);
                    OnCurrentPageChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.CurrentPage);
                    currentPage = value;
                    OnCurrentPageChanged(value);
                    OnCurrentPageChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.CurrentPage);
                }
            }
        }

        /// <summary>Executes the logic for when <see cref="IsNavOpen"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="IsNavOpen"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnIsNavOpenChanging(bool value);
        /// <summary>Executes the logic for when <see cref="IsNavOpen"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="IsNavOpen"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnIsNavOpenChanging(bool oldValue, bool newValue);
        /// <summary>Executes the logic for when <see cref="IsNavOpen"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="IsNavOpen"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnIsNavOpenChanged(bool value);
        /// <summary>Executes the logic for when <see cref="IsNavOpen"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="IsNavOpen"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnIsNavOpenChanged(bool oldValue, bool newValue);
        /// <summary>Executes the logic for when <see cref="CurrentPage"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="CurrentPage"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnCurrentPageChanging(global::Veriado.WinUI.Navigation.PageId value);
        /// <summary>Executes the logic for when <see cref="CurrentPage"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="CurrentPage"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnCurrentPageChanging(global::Veriado.WinUI.Navigation.PageId oldValue, global::Veriado.WinUI.Navigation.PageId newValue);
        /// <summary>Executes the logic for when <see cref="CurrentPage"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="CurrentPage"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnCurrentPageChanged(global::Veriado.WinUI.Navigation.PageId value);
        /// <summary>Executes the logic for when <see cref="CurrentPage"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="CurrentPage"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnCurrentPageChanged(global::Veriado.WinUI.Navigation.PageId oldValue, global::Veriado.WinUI.Navigation.PageId newValue);
    }
}