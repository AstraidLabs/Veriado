// <auto-generated/>
#pragma warning disable
#nullable enable
namespace Veriado.WinUI.ViewModels.Settings
{
    /// <inheritdoc/>
    partial class SettingsPageViewModel
    {
        /// <inheritdoc cref="themeMode"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public global::Veriado.WinUI.Services.Abstractions.AppTheme ThemeMode
        {
            get => themeMode;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<global::Veriado.WinUI.Services.Abstractions.AppTheme>.Default.Equals(themeMode, value))
                {
                    OnThemeModeChanging(value);
                    OnThemeModeChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.ThemeMode);
                    themeMode = value;
                    OnThemeModeChanged(value);
                    OnThemeModeChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.ThemeMode);
                }
            }
        }

        /// <inheritdoc cref="pageSize"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public int PageSize
        {
            get => pageSize;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<int>.Default.Equals(pageSize, value))
                {
                    OnPageSizeChanging(value);
                    OnPageSizeChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.PageSize);
                    pageSize = value;
                    OnPageSizeChanged(value);
                    OnPageSizeChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.PageSize);
                }
            }
        }

        /// <inheritdoc cref="lastFolder"/>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        public string? LastFolder
        {
            get => lastFolder;
            set
            {
                if (!global::System.Collections.Generic.EqualityComparer<string?>.Default.Equals(lastFolder, value))
                {
                    OnLastFolderChanging(value);
                    OnLastFolderChanging(default, value);
                    OnPropertyChanging(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangingArgs.LastFolder);
                    lastFolder = value;
                    OnLastFolderChanged(value);
                    OnLastFolderChanged(default, value);
                    OnPropertyChanged(global::CommunityToolkit.Mvvm.ComponentModel.__Internals.__KnownINotifyPropertyChangedArgs.LastFolder);
                }
            }
        }

        /// <summary>Executes the logic for when <see cref="ThemeMode"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="ThemeMode"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnThemeModeChanging(global::Veriado.WinUI.Services.Abstractions.AppTheme value);
        /// <summary>Executes the logic for when <see cref="ThemeMode"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="ThemeMode"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnThemeModeChanging(global::Veriado.WinUI.Services.Abstractions.AppTheme oldValue, global::Veriado.WinUI.Services.Abstractions.AppTheme newValue);
        /// <summary>Executes the logic for when <see cref="ThemeMode"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="ThemeMode"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnThemeModeChanged(global::Veriado.WinUI.Services.Abstractions.AppTheme value);
        /// <summary>Executes the logic for when <see cref="ThemeMode"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="ThemeMode"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnThemeModeChanged(global::Veriado.WinUI.Services.Abstractions.AppTheme oldValue, global::Veriado.WinUI.Services.Abstractions.AppTheme newValue);
        /// <summary>Executes the logic for when <see cref="PageSize"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="PageSize"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnPageSizeChanging(int value);
        /// <summary>Executes the logic for when <see cref="PageSize"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="PageSize"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnPageSizeChanging(int oldValue, int newValue);
        /// <summary>Executes the logic for when <see cref="PageSize"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="PageSize"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnPageSizeChanged(int value);
        /// <summary>Executes the logic for when <see cref="PageSize"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="PageSize"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnPageSizeChanged(int oldValue, int newValue);
        /// <summary>Executes the logic for when <see cref="LastFolder"/> is changing.</summary>
        /// <param name="value">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="LastFolder"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnLastFolderChanging(string? value);
        /// <summary>Executes the logic for when <see cref="LastFolder"/> is changing.</summary>
        /// <param name="oldValue">The previous property value that is being replaced.</param>
        /// <param name="newValue">The new property value being set.</param>
        /// <remarks>This method is invoked right before the value of <see cref="LastFolder"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnLastFolderChanging(string? oldValue, string? newValue);
        /// <summary>Executes the logic for when <see cref="LastFolder"/> just changed.</summary>
        /// <param name="value">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="LastFolder"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnLastFolderChanged(string? value);
        /// <summary>Executes the logic for when <see cref="LastFolder"/> just changed.</summary>
        /// <param name="oldValue">The previous property value that was replaced.</param>
        /// <param name="newValue">The new property value that was set.</param>
        /// <remarks>This method is invoked right after the value of <see cref="LastFolder"/> is changed.</remarks>
        [global::System.CodeDom.Compiler.GeneratedCode("CommunityToolkit.Mvvm.SourceGenerators.ObservablePropertyGenerator", "8.4.0.0")]
        partial void OnLastFolderChanged(string? oldValue, string? newValue);
    }
}